import os
import argparse
import matplotlib.pyplot as plt
import numpy as np

accs = [[0.1009, 0.1085, 0.1069, 0.1130, 0.1156, 0.1392, 0.1495, 0.1764, 0.1707, 0.1532],
        [0.1022, 0.0994, 0.1049, 0.1103, 0.1234, 0.1325, 0.1409, 0.1557, 0.1688, 0.1666]]#, 0.996, 0.9961, 0.9946, 0.9963, 0.995, 0.9962, 0.9952, 0.9955, 0.9959, 0.9965]]
        # [0.9881188118811881, 0.9851485148514851, 0.994059405940594, 0.994059405940594, 0.995049504950495, 0.995049504950495, 0.9930693069306931, 0.9831683168316832, 0.994059405940594, 0.997029702970297, 0.9910891089108911, 0.995049504950495, 0.994059405940594, 0.9900990099009901, 0.996039603960396, 0.994059405940594, 0.998019801980198, 0.9930693069306931, 0.9930693069306931, 0.9920792079207921, 0.996039603960396, 0.996039603960396, 0.996039603960396, 0.997029702970297, 0.995049504950495, 0.9920792079207921, 0.9910891089108911, 0.995049504950495, 0.9930693069306931, 0.995049504950495],
        # [0.9928716904276986, 0.9959266802443992, 0.9969450101832994, 0.984725050916497, 0.9918533604887984, 0.9867617107942973, 0.9826883910386965, 0.9979633401221996, 0.9989816700610998, 0.9928716904276986, 0.9969450101832994, 0.994908350305499, 0.9979633401221996, 0.994908350305499, 0.9959266802443992, 0.9979633401221996, 0.9979633401221996, 0.9959266802443992, 0.9928716904276986, 0.9887983706720977, 0.9979633401221996, 0.9918533604887984, 0.9938900203665988, 0.9928716904276986, 0.9908350305498982, 0.9969450101832994, 0.9959266802443992, 0.9887983706720977, 0.9959266802443992, 0.9959266802443992],
        # [0.9798206278026906, 0.9932735426008968, 0.9798206278026906, 0.9899103139013453, 0.9887892376681614, 0.9943946188340808, 0.9786995515695067, 0.9943946188340808, 0.984304932735426, 0.9887892376681614, 0.9932735426008968, 0.984304932735426, 0.992152466367713, 0.9966367713004485, 0.9865470852017937, 0.9943946188340808, 0.984304932735426, 0.9943946188340808, 0.9943946188340808, 0.9899103139013453, 0.9943946188340808, 0.9775784753363229, 0.9932735426008968, 0.9910313901345291, 0.9943946188340808, 0.9943946188340808, 0.9977578475336323, 0.9910313901345291, 0.9910313901345291, 0.992152466367713],
        # [0.9874739039665971, 0.9603340292275574, 0.9926931106471816, 0.9843423799582464, 0.988517745302714, 0.9853862212943633, 0.9958246346555324, 0.988517745302714, 0.9895615866388309, 0.9874739039665971, 0.9947807933194155, 0.9801670146137788, 0.9843423799582464, 0.9937369519832986, 0.9906054279749478, 0.9937369519832986, 0.9916492693110647, 0.9947807933194155, 0.9947807933194155, 0.988517745302714, 0.9874739039665971, 0.9906054279749478, 0.9947807933194155, 0.9895615866388309, 0.9947807933194155, 0.9906054279749478, 0.9926931106471816, 0.9916492693110647, 0.9926931106471816, 0.9926931106471816],
        # [0.9863813229571985, 0.9902723735408561, 0.9873540856031129, 0.9892996108949417, 0.9824902723735408, 0.9902723735408561, 0.9873540856031129, 0.9980544747081712, 0.9902723735408561, 0.9844357976653697, 0.995136186770428, 0.9970817120622568, 0.9902723735408561, 0.9961089494163424, 0.9892996108949417, 0.9912451361867705, 0.9912451361867705, 0.9912451361867705, 0.995136186770428, 0.9892996108949417, 0.9902723735408561, 0.9873540856031129, 0.9824902723735408, 0.9922178988326849, 0.9863813229571985, 0.9922178988326849, 0.9912451361867705, 0.9873540856031129, 0.995136186770428, 0.9912451361867705],
        # [0.9804928131416838, 0.9753593429158111, 0.9897330595482546, 0.9958932238193019, 0.9907597535934292, 0.9948665297741273, 0.9876796714579056, 0.9928131416837782, 0.9897330595482546, 0.9928131416837782, 0.9969199178644764, 0.9958932238193019, 0.9917864476386037, 0.9887063655030801, 0.9969199178644764, 0.9907597535934292, 0.9907597535934292, 0.9958932238193019, 0.9938398357289527, 0.9907597535934292, 0.9938398357289527, 0.9907597535934292, 0.9948665297741273, 0.9958932238193019, 0.9938398357289527, 0.9917864476386037, 0.9907597535934292, 0.9917864476386037, 0.9928131416837782, 0.9928131416837782],
        # [0.9593657086223984, 0.9504459861248761, 0.9623389494549058, 0.9861248761149654, 0.9732408325074331, 0.9890981169474727, 0.9890981169474727, 0.9425173439048563, 0.9821605550049554, 0.9821605550049554, 0.9890981169474727, 0.9890981169474727, 0.977205153617443, 0.9732408325074331, 0.981169474727453, 0.9841427155599604, 0.9762140733399405, 0.9861248761149654, 0.9851337958374629, 0.9881070366699702, 0.9890981169474727, 0.9890981169474727, 0.9861248761149654, 0.9801783944499505, 0.9841427155599604, 0.9841427155599604, 0.9851337958374629, 0.9910802775024777, 0.9801783944499505, 0.9831516352824579]]

def read_data(dir_path):
    with open(dir_path, "r") as f:
        raw_data = f.read()
        data = raw_data[1:-1].split(", ")
    return np.asfarray(data, float)

def draw_curve(folder_path, f_names):
    plt.figure()

    ax = plt.axes()
    ax.spines['top'].set_visible(False)
    ax.spines['right'].set_visible(False)

    plt.xlabel('epochs')    # x轴标签
    plt.ylabel('acc')     # y轴标签
    
    color = ['g','b','r']
    lss = ['--','-.',':']
    marker_ = ['*','o','+']
    lbl = ['lr=0.001','lr=0.003','lr=0.01']
    
    idx = 0

    for filename in f_names:
        file_path = os.path.join(folder_path, filename)
        y_loss = read_data(file_path)
        x_val = range(1, len(y_loss)+1)

        plt.plot(x_val, y_loss,label=lbl[idx],c=color[idx],ls=lss[idx],marker=marker_[idx], alpha=0.5)
        plt.legend(loc='center', bbox_to_anchor=(0.7, 0.85))
        
        idx = idx + 1
    
    plt.title('Loss Curve')
    plt.show()

def draw_curve4classification():
    plt.figure()

    ax = plt.axes()
    ax.spines['top'].set_visible(False)
    ax.spines['right'].set_visible(False)

    plt.xlabel('epochs')    # x轴标签
    plt.ylabel('loss')     # y轴标签
    
    color = ['g','b','r']
    lss = ['--','-.',':']
    marker_ = ['*','o','+']
    lbl = ['test_acc','train_acc']
    
    idx = 0

    for i in range(0,2):
        y_loss = accs[i]
        x_val = range(1, len(y_loss)+1)

        plt.plot(x_val, y_loss,label=lbl[i], alpha=0.5)
        plt.legend(loc='center', bbox_to_anchor=(0.7, 0.85))
        
        idx = idx + 1
    
    plt.title('Acc Curve for BCELoss()')
    plt.show()

if __name__ == '__main__':
    
    folder_path = "./Results/"
    file_names = ["Loss_batch_10000_layer_10.txt","loss.txt"]

    # draw_curve(folder_path, file_names)
    draw_curve4classification()